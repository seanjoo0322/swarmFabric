#!/bin/bash

# Function to generate YAML for an organization
generate_org_yaml() {
    local org_name=$1
    local peers=($2) # Assumes peer names are space-separated

    # Start the organization YAML
    echo "  - Name: $org_name"
    echo "    Domain: $org_name.example.com"
    echo "    EnableNodeOUs: true"
    echo "    Specs:"

    # Loop over each peer and add it to the YAML
    for peer in "${peers[@]}"; do
        echo "      - Hostname: $peer"
    done

    # Add Users section
    echo "    Users:"
    echo "      Count: 1"
}

generate_ord_yaml() {
    local peers=$1 # Number of orderers
    # Loop over each orderer and add it to the YAML
    for ((i=0; i < $peers; i++)); do
        if [ $i -eq 0 ]; then
            echo "      - Hostname: orderer" >> crypto-config.yaml
        else
            echo "      - Hostname: orderer$i" >> crypto-config.yaml
        fi
    done
}


# Start of the script
echo "Crypto-config YAML Generator"

# Ask for the number of organizations
echo -n "Enter the number of organizations: "
read num_orgs


# Start the crypto-config.yaml content
echo "# ---------------------------------------------------------------------------
# crypto-config.yaml file generated by script
# ---------------------------------------------------------------------------" > crypto-config.yaml

echo "OrdererOrgs:
  # ---------------------------------------------------------------------------
  # Orderer
  # ---------------------------------------------------------------------------
  - Name: Orderer
    Domain: example.com 
    Specs:" >> crypto-config.yaml

echo "how many orderer"
read orderer

generate_ord_yaml $orderer 

echo "PeerOrgs:" >> crypto-config.yaml

# Loop over each organization
for (( i=1; i<=num_orgs; i++ ))
do
    # Ask for details of each organization
    echo -n "Enter name for Org$i (e.g., Org1): "
    read org_name
    echo -n "Enter peer hostnames for $org_name separated by space (e.g., peer0 peer1): "
    read -a peer_names

    # Append organization details to the file
    generate_org_yaml $org_name "${peer_names[*]}" >> crypto-config.yaml
done

echo "crypto-config.yaml has been generated."
